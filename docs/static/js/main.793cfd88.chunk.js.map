{"version":3,"sources":["services/callToApi.js","components/Header.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","results","map","data","name","species","id","img","image","Header","FilterByName","props","className","htmlFor","type","value","searchName","onChange","handleSearchName","placeholder","FilterBySpecies","searchSpecies","handleSearchSpecies","Filters","onSubmit","handleForm","CharacterCard","src","characterData","alt","title","CharacterList","list","App","useState","setData","setSearchName","setSearchSpecies","useEffect","filteredData","filter","character","toLocaleLowerCase","includes","characterSpecies","ev","preventDefault","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"mMAgBeA,G,MAhBG,WAChB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GASL,OARmBA,EAAKC,QAAQC,KAAI,SAACC,GACnC,MAAO,CACLC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdC,GAAIH,EAAKG,GACTC,IAAKJ,EAAKK,e,OCFLC,EAPA,WACb,OACE,kCACE,8FCeSC,EAlBM,SAACC,GACpB,OACE,qCACE,uBAAOC,UAAU,YAAYC,QAAQ,OAArC,kCAGA,uBACED,UAAU,YACVE,KAAK,OACLV,KAAK,OACLE,GAAG,OACHS,MAAOJ,EAAMK,WACbC,SAAUN,EAAMO,iBAChBC,YAAY,kBCKLC,EAlBS,SAACT,GACvB,OACE,qCACE,uBAAOE,QAAQ,YACf,yBACED,UAAU,gBACVR,KAAK,UACLE,GAAG,UACHS,MAAOJ,EAAMU,cACbJ,SAAUN,EAAMW,oBALlB,UAOE,wBAAQP,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,0BCIOQ,EAdC,SAACZ,GACf,OACE,uBAAMC,UAAU,OAAOY,SAAUb,EAAMc,WAAvC,UACE,cAAC,EAAD,CACET,WAAYL,EAAMK,WAClBE,iBAAkBP,EAAMO,mBAE1B,cAAC,EAAD,CACEG,cAAeV,EAAMS,gBACrBE,oBAAqBX,EAAMW,0BCEpBI,EAdO,SAACf,GACrB,OACE,qCACE,qBACEC,UAAU,SACVe,IAAKhB,EAAMiB,cAAcrB,IACzBsB,IAAG,mBAAclB,EAAMiB,cAAcxB,MACrC0B,MAAK,mBAAcnB,EAAMiB,cAAcxB,QAEzC,oBAAIQ,UAAU,KAAd,SAAoBD,EAAMiB,cAAcxB,OACxC,4BAAIO,EAAMiB,cAAcvB,cCAf0B,EARO,SAACpB,GACrB,IAAMqB,EAAOrB,EAAMR,KAAKD,KAAI,SAAC0B,GAAD,OAC1B,oBAAIhB,UAAU,cAAd,SACE,cAAC,EAAD,CAAegB,cAAeA,KADCA,EAActB,OAIjD,OAAO,oBAAIM,UAAU,OAAd,SAAsBoB,KC+DhBC,EA/DH,WACV,MAAwBC,mBAAS,IAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACA,EAAoCD,mBAAS,IAA7C,mBAAOlB,EAAP,KAAmBoB,EAAnB,KAEA,EAA0CF,mBAAS,OAAnD,mBAAOb,EAAP,KAAsBgB,EAAtB,KAEAC,qBAAU,WACR1C,IAAYE,MAAK,SAACC,GAChBoC,EAAQpC,QAET,CAACiB,IAEJ,IAWMuB,EAAepC,EAClBqC,QAAO,SAACC,GAAD,OACNA,EAAUrC,KACPsC,oBACAC,SAAS3B,EAAW0B,wBAExBF,QACC,SAACI,GAAD,MACoB,QAAlBvB,GAA2BuB,EAAiBvC,UAAYgB,KAE9D,OACE,sBAAKT,UAAU,OAAf,UACE,cAAC,EAAD,IACA,iCACE,cAAC,EAAD,CACEI,WAAYA,EACZK,cAAeA,EACfI,WA5BW,SAACoB,GAClBA,EAAGC,kBA4BG5B,iBAzBiB,SAAC2B,GACxBT,EAAcS,EAAGE,cAAchC,QAyBzBO,oBAvBoB,SAACuB,GAC3BR,EAAiBQ,EAAGE,cAAchC,UAwB9B,cAAC,EAAD,CAAeZ,KAAMoC,OAEvB,+BC/CNS,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.793cfd88.chunk.js","sourcesContent":["const callToApi = () => {\r\n  return fetch(`https://rickandmortyapi.com/api/character/`)\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      const characters = json.results.map((data) => {\r\n        return {\r\n          name: data.name,\r\n          species: data.species,\r\n          id: data.id,\r\n          img: data.image,\r\n        };\r\n      });\r\n      return characters;\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","const Header = () => {\r\n  return (\r\n    <section>\r\n      <p>Logo de Rick and Morty (no consigo enlazarla.... ¬¬)</p>\r\n    </section>\r\n  );\r\n};\r\nexport default Header;\r\n","const FilterByName = (props) => {\r\n  return (\r\n    <>\r\n      <label className='labelName' htmlFor='name'>\r\n        Buscar el personaje:\r\n      </label>\r\n      <input\r\n        className='inputName'\r\n        type='text'\r\n        name='name'\r\n        id='name'\r\n        value={props.searchName}\r\n        onChange={props.handleSearchName}\r\n        placeholder='Ej: Morty'\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterByName;\r\n","const FilterBySpecies = (props) => {\r\n  return (\r\n    <>\r\n      <label htmlFor='species'></label>\r\n      <select\r\n        className='selectSpecies'\r\n        name='species'\r\n        id='species'\r\n        value={props.searchSpecies}\r\n        onChange={props.handleSearchSpecies}\r\n      >\r\n        <option value='all'>Todos</option>\r\n        <option value='Human'>Human</option>\r\n        <option value='Alien'>Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default FilterBySpecies;\r\n","import FilterByName from './FilterByName';\r\nimport FilterBySpecies from './FilterBySpecies';\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <form className='form' onSubmit={props.handleForm}>\r\n      <FilterByName\r\n        searchName={props.searchName}\r\n        handleSearchName={props.handleSearchName}\r\n      />\r\n      <FilterBySpecies\r\n        searchSpecies={props.FilterBySpecies}\r\n        handleSearchSpecies={props.handleSearchSpecies}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default Filters;\r\n","const CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <img\r\n        className='imgApi'\r\n        src={props.characterData.img}\r\n        alt={`Foto de: ${props.characterData.name}`}\r\n        title={`Foto de: ${props.characterData.name}`}\r\n      />\r\n      <h2 className='h2'>{props.characterData.name}</h2>\r\n      <p>{props.characterData.species}</p>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n  const list = props.data.map((characterData) => (\r\n    <li className='characterLi' key={characterData.id}>\r\n      <CharacterCard characterData={characterData} />\r\n    </li>\r\n  ));\r\n  return <ul className='list'>{list}</ul>;\r\n};\r\nexport default CharacterList;\r\n","import '../styles/App.scss';\nimport { useState, useEffect } from 'react';\n// import { Link, Route } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [searchName, setSearchName] = useState('');\n\n  const [searchSpecies, setSearchSpecies] = useState('all');\n\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, [searchName]);\n\n  const handleForm = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleSearchName = (ev) => {\n    setSearchName(ev.currentTarget.value);\n  };\n  const handleSearchSpecies = (ev) => {\n    setSearchSpecies(ev.currentTarget.value);\n  };\n\n  const filteredData = data\n    .filter((character) =>\n      character.name\n        .toLocaleLowerCase()\n        .includes(searchName.toLocaleLowerCase())\n    )\n    .filter(\n      (characterSpecies) =>\n        searchSpecies === 'all' || characterSpecies.species === searchSpecies\n    );\n  return (\n    <div className='page'>\n      <Header />\n      <main>\n        <Filters\n          searchName={searchName}\n          searchSpecies={searchSpecies}\n          handleForm={handleForm}\n          handleSearchName={handleSearchName}\n          handleSearchSpecies={handleSearchSpecies}\n        />\n        <CharacterList data={filteredData} />\n      </main>\n      <footer></footer>\n      {/* <Route path='/contacto'></Route>\n\n      <nav>\n        <ul>\n          <li>\n            <Link to='/'></Link>\n          </li>\n          <li>\n            <Link to='/contacto'></Link>\n          </li>\n        </ul>\n      </nav> */}\n    </div>\n  );\n};\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, //Le indicamos que el componente HashRouter es ahora la madre de App. Esto hace que tanto App como todos sus componentes hijas, nietas... puedan trabajar con las rutas.\n  document.getElementById('root') // estamos diciendo que vamos a usar las rutas con Hash.\n);\n\n//Nota: en el futuro cuando tengas acceso a la configuración de tu servidor y puedas usar el sistema moderno de rutas, tienes que cambiar en este fichero la palabra HashRouter por BrowserRouter.\n"],"sourceRoot":""}