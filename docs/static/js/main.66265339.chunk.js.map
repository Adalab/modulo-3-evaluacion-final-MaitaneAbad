{"version":3,"sources":["services/callToApi.js","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","results","map","data","name","species","id","img","image","Header","CharacterCard","props","src","characterData","alt","title","CharacterList","list","App","useState","setData","searchName","setSearchName","searchSpecies","setSearchSpecies","useEffect","filteredData","filter","character","toLocaleLowerCase","includes","characterSpecies","className","onSubmit","ev","preventDefault","htmlFor","type","value","onChange","currentTarget","placeholder","ReactDOM","render","document","getElementById"],"mappings":"mMAgBeA,G,MAhBG,WAChB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GASL,OARmBA,EAAKC,QAAQC,KAAI,SAACC,GACnC,MAAO,CACLC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdC,GAAIH,EAAKG,GACTC,IAAKJ,EAAKK,e,OCFLC,EAPA,WACb,OACE,kCACE,8FCUSC,EAbO,SAACC,GACrB,OACE,qCACE,qBACEC,IAAKD,EAAME,cAAcN,IACzBO,IAAG,mBAAcH,EAAME,cAAcT,MACrCW,MAAK,mBAAcJ,EAAME,cAAcT,QAEzC,6BAAKO,EAAME,cAAcT,OACzB,4BAAIO,EAAME,cAAcR,cCCfW,EARO,SAACL,GACrB,IAAMM,EAAON,EAAMR,KAAKD,KAAI,SAACW,GAAD,OAC1B,6BACE,cAAC,EAAD,CAAeA,cAAeA,KADvBA,EAAcP,OAIzB,OAAO,6BAAKW,KC6ECC,EA9EH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEA,EAA0CH,mBAAS,OAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACR7B,IAAYE,MAAK,SAACC,GAChBqB,EAAQrB,QAET,CAACsB,IAEJ,IAWMK,EAAevB,EAClBwB,QAAO,SAACC,GAAD,OACNA,EAAUxB,KACPyB,oBACAC,SAAST,EAAWQ,wBAExBF,QACC,SAACI,GAAD,MACoB,QAAlBR,GAA2BQ,EAAiB1B,UAAYkB,KAE9D,OACE,sBAAKS,UAAU,OAAf,UACE,cAAC,EAAD,IACA,iCACE,4CACA,uBAAMC,SA1BO,SAACC,GAClBA,EAAGC,kBAyBC,UACE,uBAAOC,QAAQ,OAAf,mCACA,uBACEC,KAAK,OACLjC,KAAK,OACLE,GAAG,OACHgC,MAAOjB,EACPkB,SA7Be,SAACL,GACxBZ,EAAcY,EAAGM,cAAcF,QA6BvBG,YAAY,cAEd,uBAAOL,QAAQ,YACf,yBACEhC,KAAK,UACLE,GAAG,UACHgC,MAAOf,EACPgB,SAlCkB,SAACL,GAC3BV,EAAiBU,EAAGM,cAAcF,QA6B5B,UAME,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,4BAgBN,cAAC,EAAD,CAAenC,KAAMuB,QCzE3BgB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66265339.chunk.js","sourcesContent":["const callToApi = () => {\r\n  return fetch(`https://rickandmortyapi.com/api/character/`)\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      const characters = json.results.map((data) => {\r\n        return {\r\n          name: data.name,\r\n          species: data.species,\r\n          id: data.id,\r\n          img: data.image,\r\n        };\r\n      });\r\n      return characters;\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","const Header = () => {\r\n  return (\r\n    <section>\r\n      <p>Logo de Rick and Morty (no consigo enlazarla.... ¬¬)</p>\r\n    </section>\r\n  );\r\n};\r\nexport default Header;\r\n","const CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <img\r\n        src={props.characterData.img}\r\n        alt={`Foto de: ${props.characterData.name}`}\r\n        title={`Foto de: ${props.characterData.name}`}\r\n      />\r\n      <h2>{props.characterData.name}</h2>\r\n      <p>{props.characterData.species}</p>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n  const list = props.data.map((characterData) => (\r\n    <li key={characterData.id}>\r\n      <CharacterCard characterData={characterData} />\r\n    </li>\r\n  ));\r\n  return <ul>{list}</ul>;\r\n};\r\nexport default CharacterList;\r\n","import '../styles/App.scss';\nimport { useState, useEffect } from 'react';\n// import { Link, Route } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [searchName, setSearchName] = useState('');\n\n  const [searchSpecies, setSearchSpecies] = useState('all');\n\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, [searchName]);\n\n  const handleForm = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleSearchName = (ev) => {\n    setSearchName(ev.currentTarget.value);\n  };\n  const handleSearchSpecies = (ev) => {\n    setSearchSpecies(ev.currentTarget.value);\n  };\n\n  const filteredData = data\n    .filter((character) =>\n      character.name\n        .toLocaleLowerCase()\n        .includes(searchName.toLocaleLowerCase())\n    )\n    .filter(\n      (characterSpecies) =>\n        searchSpecies === 'all' || characterSpecies.species === searchSpecies\n    );\n  return (\n    <div className='page'>\n      <Header />\n      <main>\n        <h1>Personajes</h1>\n        <form onSubmit={handleForm}>\n          <label htmlFor='name'>Buscar el personaje: </label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            value={searchName}\n            onChange={handleSearchName}\n            placeholder='Ej: Morty'\n          />\n          <label htmlFor='species'></label>\n          <select\n            name='species'\n            id='species'\n            value={searchSpecies}\n            onChange={handleSearchSpecies}\n          >\n            <option value='all'>Todos</option>\n            <option value='Human'>Human</option>\n            <option value='Alien'>Alien</option>\n          </select>\n        </form>\n      </main>\n      {/* <Route path='/contacto'></Route>\n\n      <nav>\n        <ul>\n          <li>\n            <Link to='/'></Link>\n          </li>\n          <li>\n            <Link to='/contacto'></Link>\n          </li>\n        </ul>\n      </nav> */}\n      <CharacterList data={filteredData} />\n    </div>\n  );\n};\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, //Le indicamos que el componente HashRouter es ahora la madre de App. Esto hace que tanto App como todos sus componentes hijas, nietas... puedan trabajar con las rutas.\n  document.getElementById('root') // estamos diciendo que vamos a usar las rutas con Hash.\n);\n\n//Nota: en el futuro cuando tengas acceso a la configuración de tu servidor y puedas usar el sistema moderno de rutas, tienes que cambiar en este fichero la palabra HashRouter por BrowserRouter.\n"],"sourceRoot":""}